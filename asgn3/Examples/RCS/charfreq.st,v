head	1.6;
access;
symbols;
locks;
comment	@# @;


1.6
date	2012.02.24.02.57.46;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.02.24.02.29.51;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.05.12.20.07.16;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.05.06.03.45.21;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.05.04.03.46.46;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.05.04.03.34.58;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cmps112-wm/usr/smalltalk/bin/gst -f
"$Id: charfreq.st,v 1.5 2012-02-23 18:29:51-08 - - $"
"Count frequency of input characters"

nl := Character nl.

Character extend [
   isPrint [
      ^ (Character space <= self) & (self <= $~)
   ]
   visible [
      self isPrint ifTrue: [^ '$', self asString]
                   ifFalse: [^ self asInteger printStringRadix: 8]
   ]
]

Object subclass: ZeroArray [
   |theArray|

   ZeroArray class >> new [
      self shouldNotImplement.
   ]

   ZeroArray class >> new: size [
      |result|
      result := super new.
      result init: size.
      ^ result
   ]

   init: size [
      theArray := Array new: size.
   ]

   size [
      ^ theArray size.
   ]

   at: index [
      ^ theArray at: index + 1.
   ]

   at: index put: value [
      ^ theArray at: index + 1 put: value.
   ]

   incr: index [
      (self at: index) isNil
         ifTrue: [ self at: index put: 0].
      self at: index put: (self at: index) + 1.
   ]

   keysAndValuesDo: aBlock [
      (0 to: (self size) - 1) do: [:index |
         aBlock value: index value: (self at: index).
      ]
   ]

]


freqtable := ZeroArray new: 256.

[stdin atEnd not] whileTrue: [
   |ordChar|
   ordChar := stdin next asInteger.
   freqtable incr: ordChar.
].

freqtable keysAndValuesDo: [:key :value |
   (value notNil and: [value > 0]) ifTrue: [
      stdout << 'freq[' << key asCharacter visible << ']=' << value
             << nl.
   ]
].

"TEST: echo aaaaaaaaaa bbbbb ccc | charfreq.st"
@


1.5
log
@-
@
text
@d2 1
a2 1
"$Id: charfreq.st,v 1.4 2011-05-12 13:07:16-07 - - $"
d60 1
@


1.4
log
@-
@
text
@d2 1
a2 1
"$Id: charfreq.st,v 1.3 2011-05-05 20:45:21-07 - - $"
d13 1
a13 1
                   ifFalse: [^ self asInteger]
@


1.3
log
@-
@
text
@d2 1
a2 1
"$Id: charfreq.st,v 1.2 2011-05-03 20:46:46-07 - - $"
d12 1
a12 1
      self isPrint ifTrue: [^ self]
@


1.2
log
@-
@
text
@d2 1
a2 1
"$Id: charfreq.st,v 1.1 2011-05-03 20:34:58-07 - - $"
d7 10
d71 2
a72 1
      stdout << 'freq[' << key asCharacter << ']=' << value << nl.
d75 2
@


1.1
log
@-
@
text
@d2 2
a3 1
"$Id: bitstream.st,v 1.1 2011-04-22 17:16:30-07 - - $"
d5 1
a5 1
"Count frequency of input characters"
d9 1
d13 1
d20 1
d24 5
d32 1
d36 1
d42 1
d44 2
a45 2
      [0 to: size - 1] do: [:index |
         aBlock value: index value: (theArray at: index).
d48 1
d51 1
a51 1
freqtable := ZeroArray 256.
d54 10
a63 3
   |aChar|
   freqtable incr: stdin next asInteger.
]
@
