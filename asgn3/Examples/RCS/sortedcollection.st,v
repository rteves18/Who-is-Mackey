head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2012.03.07.22.40.03;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.03.07.21.35.11;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.03.07.21.29.19;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cmps112-wm/usr/smalltalk/bin/gst -f
"$Id: sortedcollection.st,v 1.2 2012-03-07 13:35:11-08 - - $"

Object subclass: Name [
   |first last|
   first [^ first]
   last [^ last]
   Name class >> new [self shouldNotImplement]

   Name class >> new: last first: first [
      |result|
      result := super new.
      result setFirst: first setLast: last.
      ^ result.
   ]

   setFirst: myFirst setLast: myLast [
      first := myFirst.
      last := myLast.
   ]

   <= other [
      last = other last
         ifTrue: [^ first <= other first]
         ifFalse: [^ last <= other last].
   ]

   printOn: aStream [
      ^ aStream << last << ', ' << first.
   ]
]

sortcol := SortedCollection new.
sortcol add: (Name new: 'Doe' first: 'John').
sortcol add: (Name new: 'Roe' first: 'Mary').
sortcol add: (Name new: 'Smith' first: 'Joe').
sortcol add: (Name new: 'Smith' first: 'Jane').

nl := Character nl.
sortcol do: [:item| stdout << item << nl.].

"TEST: sortedcollection.st"
@


1.2
log
@-
@
text
@d2 1
a2 1
"$Id: sortedcollection.st,v 1.1 2012-03-07 13:29:19-08 - - $"
d8 1
a8 1
   Name class >> new [self shouldNotImplement].
d27 4
d39 1
d41 2
@


1.1
log
@-
@
text
@d2 1
a2 1
"$Id: tree.st,v 1.10 2012-02-23 18:57:51-08 - - $"
d4 1
a4 1
Name subclass: Object [
d6 5
a10 4
   Leaf class >> new [
      self shouldNotImplement.
   ]
   Leaf class new: last first: first [
d16 11
d29 1
a29 1
sortcol := Sorted Collection new.
@
