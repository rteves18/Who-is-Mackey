head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2012.02.27.22.24.57;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.02.27.22.20.19;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.02.27.22.17.45;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cmps112-wm/usr/smalltalk/bin/gst -f
"$Id: priority.st,v 1.2 2012-02-27 14:20:19-08 - - $"

nl := Character nl.

priority := SortedCollection new.
priority inspect.

priority add:  3; inspect.
priority add:  1; inspect.
priority add:  4; inspect.
priority add: 14; inspect.
priority add: 22; inspect.
priority add:  6; inspect.
priority add:  7; inspect.
priority add:  9; inspect.
priority add: 29; inspect.
priority add:  4; inspect.

"TEST: priority.st"

@


1.2
log
@-
@
text
@d2 1
a2 1
"$Id: priority.st,v 1.1 2012-02-27 14:17:45-08 - - $"
d7 1
d9 10
a18 8
#(3 1 4 14 22 6 7 9 29 4) do: [:number|
   priority add: number.
   stdout << 'Added ' << number << nl.
   priority do: [:int| stdout << ' ' << int].
   stdout << nl.
]

priority inspect.
@


1.1
log
@-
@
text
@d2 1
a2 1
"$Id: intsort.st,v 1.4 2012-02-23 18:39:46-08 - - $"
a6 2
sort add: 3; add: 1; add: 4; add: 1; add: 5; add: 9; add: 2; add: 6.
sort inspect.
d8 8
a15 9
stdout << 'sort do:' << nl.
sort do: [:int|
   stdout << ' ' << int.
].
stdout << nl.

stdout << 'notEmpty whileTrue:' << nl.
[sort notEmpty] whileTrue: [stdout << ' ' << sort removeFirst].
stdout << nl.
@
